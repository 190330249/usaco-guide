{
  "ex": [
    {
      "source": "CF",
      "name": "Div 2 C - Maximum Median",
      "id": "contest/1201/problem/C",
      "difficulty": "Easy",
      "starred": false,
      "tags": ["Binary Search"],
      "solID": "",
      "solQuality": "ok",
      "url": "https://codeforces.com/contest/1201/problem/C",
      "uniqueID": "https://codeforces.com/contest/1201/problem/C"
    }
  ],
  "usaco": [
    {
      "source": "Silver",
      "name": "Cow Dance Show",
      "id": "690",
      "difficulty": "Easy",
      "starred": false,
      "tags": ["Binary Search", "Ordered Set"],
      "solID": "usaco-690",
      "solQuality": "ok",
      "url": "http://www.usaco.org/index.php?page=viewproblem2&cpid=690",
      "uniqueID": "http://www.usaco.org/index.php?page=viewproblem2&cpid=690"
    },
    {
      "source": "Silver",
      "name": "Convention",
      "id": "858",
      "difficulty": "Easy",
      "starred": false,
      "tags": ["Binary Search", "Sorting"],
      "solID": "usaco-858",
      "solQuality": "ok",
      "url": "http://www.usaco.org/index.php?page=viewproblem2&cpid=858",
      "uniqueID": "http://www.usaco.org/index.php?page=viewproblem2&cpid=858"
    },
    {
      "source": "Silver",
      "name": "Angry Cows",
      "id": "594",
      "difficulty": "Easy",
      "starred": false,
      "tags": ["Binary Search", "Sorting"],
      "solID": "usaco-594",
      "solQuality": "ok",
      "url": "http://www.usaco.org/index.php?page=viewproblem2&cpid=594",
      "uniqueID": "http://www.usaco.org/index.php?page=viewproblem2&cpid=594"
    },
    {
      "source": "Silver",
      "name": "Social Distancing",
      "id": "1038",
      "difficulty": "Normal",
      "starred": false,
      "tags": ["Binary Search", "Sorting"],
      "solID": "usaco-1038",
      "solQuality": "ok",
      "url": "http://www.usaco.org/index.php?page=viewproblem2&cpid=1038",
      "uniqueID": "http://www.usaco.org/index.php?page=viewproblem2&cpid=1038"
    },
    {
      "source": "Gold",
      "name": "Angry Cows",
      "id": "597",
      "difficulty": "Hard",
      "starred": true,
      "tags": ["Binary Search", "Sorting"],
      "solID": "",
      "solQuality": "ok",
      "url": "http://www.usaco.org/index.php?page=viewproblem2&cpid=597",
      "uniqueID": "http://www.usaco.org/index.php?page=viewproblem2&cpid=597"
    },
    {
      "source": "Silver",
      "name": "Loan Repayment",
      "id": "991",
      "difficulty": "Very Hard",
      "starred": false,
      "tags": ["Binary Search", "Sqrt"],
      "solID": "requires some rather tricky analysis to speed up naive $mathcal{O}(Nlog N)$ solution",
      "solQuality": "ok",
      "url": "http://www.usaco.org/index.php?page=viewproblem2&cpid=991",
      "uniqueID": "http://www.usaco.org/index.php?page=viewproblem2&cpid=991"
    },
    {
      "source": "Plat",
      "name": "Load Balancing",
      "id": "624",
      "difficulty": "Insane",
      "starred": false,
      "tags": ["Binary Search", "Sorting"],
      "solID": "usaco-624",
      "solQuality": "ok",
      "url": "http://www.usaco.org/index.php?page=viewproblem2&cpid=624",
      "uniqueID": "http://www.usaco.org/index.php?page=viewproblem2&cpid=624"
    }
  ],
  "count": [
    {
      "source": "Silver",
      "name": "Counting Haybales",
      "id": "666",
      "difficulty": "Easy",
      "starred": false,
      "tags": ["Binary Search"],
      "solID": "",
      "solQuality": "ok",
      "url": "http://www.usaco.org/index.php?page=viewproblem2&cpid=666",
      "uniqueID": "http://www.usaco.org/index.php?page=viewproblem2&cpid=666"
    }
  ],
  "general": [
    {
      "source": "CF",
      "name": "Cellular Network",
      "id": "https://codeforces.com/contest/702/problem/C",
      "difficulty": "Easy",
      "starred": false,
      "tags": ["Binary Search"],
      "solID": "cellular-network",
      "solQuality": "ok",
      "url": "https://codeforces.com/contest/702/problem/C",
      "uniqueID": "https://codeforces.com/contest/702/problem/C"
    },
    {
      "source": "CSES",
      "name": "Factory Machines",
      "id": "1620",
      "difficulty": "Easy",
      "starred": false,
      "tags": ["Binary Search"],
      "solID": "cses-1620",
      "solQuality": "ok",
      "url": "https://cses.fi/problemset/task/1620",
      "uniqueID": "https://cses.fi/problemset/task/1620"
    },
    {
      "source": "CSES",
      "name": "Array Division",
      "id": "1085",
      "difficulty": "Easy",
      "starred": false,
      "tags": ["Binary Search"],
      "solID": "cses-1085",
      "solQuality": "ok",
      "url": "https://cses.fi/problemset/task/1085",
      "uniqueID": "https://cses.fi/problemset/task/1085"
    },
    {
      "source": "CSES",
      "name": "Multiplication Table",
      "id": "2422",
      "difficulty": "Normal",
      "starred": false,
      "tags": ["Binary Search"],
      "solID": "cses-2422",
      "solQuality": "ok",
      "url": "https://cses.fi/problemset/task/2422",
      "uniqueID": "https://cses.fi/problemset/task/2422"
    },
    {
      "source": "CF",
      "name": "Edu C: Magic Ship",
      "id": "problemset/problem/1117/C",
      "difficulty": "Normal",
      "starred": true,
      "tags": ["Binary Search", "Prefix Sums"],
      "solID": "cf-magship",
      "solQuality": "ok",
      "url": "https://codeforces.com/problemset/problem/1117/C",
      "uniqueID": "https://codeforces.com/problemset/problem/1117/C"
    },
    {
      "source": "CF",
      "name": "The Meeting Place Cannot Be Changed",
      "id": "contest/782/problem/B",
      "difficulty": "Normal",
      "starred": true,
      "tags": ["Binary Search"],
      "solID": "binary search on time with epsilon and then find if there exist non-empty intersection of the ranges (maximum of left points and minimum of right points)",
      "solQuality": "ok",
      "url": "https://codeforces.com/contest/782/problem/B",
      "uniqueID": "https://codeforces.com/contest/782/problem/B"
    },
    {
      "source": "CF",
      "name": "Preparing for Merge Sort",
      "id": "contest/847/problem/B",
      "difficulty": "Normal",
      "starred": false,
      "tags": ["Binary Search"],
      "solID": "preparing-for-mergesort",
      "solQuality": "ok",
      "url": "https://codeforces.com/contest/847/problem/B",
      "uniqueID": "https://codeforces.com/contest/847/problem/B"
    },
    {
      "source": "CF",
      "name": "Packmen",
      "id": "contest/847/problem/E",
      "difficulty": "Hard",
      "starred": false,
      "tags": ["Binary Search"],
      "solID": "cf-packmen",
      "solQuality": "ok",
      "url": "https://codeforces.com/contest/847/problem/E",
      "uniqueID": "https://codeforces.com/contest/847/problem/E"
    },
    {
      "source": "CF",
      "name": "Level Generation",
      "id": "problemset/problem/818/F",
      "difficulty": "Hard",
      "starred": false,
      "tags": ["Binary Search"],
      "solID": "first find out which is the best way to construct the graph, then it's possible to see that the number of edges increase for some range and then decrease; so, using binary search find the last i such that f(i-1)<=f(i)",
      "solQuality": "ok",
      "url": "https://codeforces.com/problemset/problem/818/F",
      "uniqueID": "https://codeforces.com/problemset/problem/818/F"
    },
    {
      "source": "Baltic OI",
      "name": "2012 - Mobile",
      "id": "https://oj.uz/problem/view/BOI12_mobile",
      "difficulty": "Very Hard",
      "starred": false,
      "tags": ["Binary Search"],
      "solID": "baltic-12-mobile",
      "solQuality": "ok",
      "url": "https://oj.uz/problem/view/BOI12_mobile",
      "uniqueID": "https://oj.uz/problem/view/BOI12_mobile"
    }
  ]
}
